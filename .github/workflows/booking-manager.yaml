name: Booking Manager Deploy
on:
    push:
        branches:
            - 'feature/docker'

permissions:
    id-token: write 
              
jobs:
    buildandpush:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: configure aws credentials
              uses: aws-actions/configure-aws-credentials@v3
              with:
                role-to-assume: arn:aws:iam::058264348381:role/CheLagarto-ECR-Role
                aws-region: us-east-1

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Build and Push to ECR
              env:
                AWS_ROLE_ARN: arn:aws:iam::058264348381:role/CheLagarto-ECR-Role
              run: |
                docker build -t booking-manager .
                docker tag booking-manager:latest 058264348381.dkr.ecr.us-east-1.amazonaws.com/booking-manager:latest
                docker push 058264348381.dkr.ecr.us-east-1.amazonaws.com/booking-manager:latest
                echo "image=058264348381.dkr.ecr.us-east-1.amazonaws.com/booking-manager:latest" >> $GITHUB_OUTPUT
            - name: Fill in the new image ID in the Amazon ECS task definition
              id: task-def
              uses: aws-actions/amazon-ecs-render-task-definition@v1
              with:
                task-definition: task-definition.json
                container-name: booking-manager
                image: ${{ steps.build-image.outputs.image }}
            - name: Deploy Amazon ECS task definition
              uses: aws-actions/amazon-ecs-deploy-task-definition@v1
              with:
                task-definition: ${{ steps.task-def.outputs.task-definition }}
                service: booking-manager
                cluster: CheLagarto-UAT-CLUSTER
                wait-for-service-stability: true
                
